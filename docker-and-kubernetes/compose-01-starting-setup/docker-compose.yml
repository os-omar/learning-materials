# https://docs.docker.com/reference/compose-file
# docker-compose will automatically create a network for you to gather all your containers
services:
  mongodb:
    image: "mongo:latest"
    # container_name: mongodb
    volumes:
      - data:/data/db
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=omar
    #   - MONGO_INITDB_ROOT_PASSWORD=secret
    env_file:
      - ./env/.mongo.env
  backend:
    build: ./backend
    # build:
    #   context: ./backend
    #   dockerfile: Dockerfile
    #   args:
    #     - NODE_ENV=development
    ports:
      - "80:80"
    volumes:
      - logs:/app/logs
      - ./backend:/app
      - /app/node_modules
    env_file:
      - ./env/.backend.env
    depends_on:
      - mongodb
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - /app/node_modules
    depends_on:
      - backend
# only named volumes are required to be mentioned in the volumes section, both anonymous and bind mounts don't need to be mentioned
volumes:
  data:
  logs:
# docker-compose up -d
# docker-compose up -d --build
# - build: force rebuild the images

# docker-compose down
# - down alone does not remove volumes
# docker-compose down -v
# - down -v removes volumes

# docker-compose build
# - ONLY build the custom images without starting the containers
